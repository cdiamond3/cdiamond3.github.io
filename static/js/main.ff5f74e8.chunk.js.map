{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/Socials/Socials.js","components/MintArea/MintArea.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Socials","href","class","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","className","Image","src","Card","FormText","target","length","substring","Number","DISFormTextLAY_COST","Button","variant","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","newMintAmount","incrementMintAmount","decrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","MintArea","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff5f74e8.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import './socials.css'\n\nexport default function Socials() {\n    return (\n        <div>\n            <a href=\"https://twitter.com/Immatureinfants\" class=\"fa fa-twitter2\"></a>\n            <a href=\"https://www.instagram.com/theimmatureinfantsclub/\" class=\"fa fa-instagram2\"></a>\n            <a href=\"https://discord.gg/3gdM5mZHmB\" class=\"fa fa-discord\"></a>\n            <a href=\"https://opensea.io/collection/the-immature-infants-club-official\" class=\"fa fa-opensea\"></a>\n        </div>\n    )\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"../../redux/blockchain/blockchainActions\";\nimport { fetchData } from \"../../redux/data/dataActions\";\nimport Socials from \"../Socials/Socials\";\nimport \"./mintArea.css\";\nimport { FormText, Button, Image, Card } from \"react-bootstrap\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Welcome to the club! the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"nftData\">\n        <Image src={\"/config/images/bg3.png\"} className=\"logo\" />\n        <Card>\n          <div>\n            <Socials />\n          </div>\n          <FormText className=\"mintNumber\">MINT COUNT:</FormText>\n          <br></br>\n          <FormText className=\"mintNumber\">\n            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n          </FormText>\n          <p className=\"mintNumber3\">\n            <a target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n              {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n            </a>\n          </p>\n          {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n            <>\n              <p>The sale has ended.</p>\n              <p>You can still find {CONFIG.NFT_NAME} on</p>\n              <a target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                {CONFIG.MARKETPLACE}\n              </a>\n            </>\n          ) : (\n            <>\n              <FormText className=\"mintNumber\">\n                1 {CONFIG.SYMBOL} costs {CONFIG.DISFormTextLAY_COST}\n                {\"6 \"}\n                {CONFIG.NETWORK.SYMBOL}\n              </FormText>\n              <br></br>\n              <FormText className=\"mintNumber2\">Excluding gas fees.</FormText>\n              <br></br>\n              <FormText className=\"mintNumber5\">\n                DUE TO NETWORK ISSUES PLEASE SET PRIORITY TO MEDIUM OR HIGH FOR\n                MINTING\n              </FormText>\n              <br></br>\n              {blockchain.account === \"\" ||\n              blockchain.smartContract === null ? (\n                <div>\n                  <FormText className=\"mintNumber2\">\n                    Connect to the {CONFIG.NETWORK.NAME} network\n                  </FormText>\n                  <br></br>\n                  <Button\n                    className=\"mintButton\"\n                    variant=\"primary\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      dispatch(connect());\n                      getData();\n                    }}\n                  >\n                    CONNECT YOUR WALLET\n                  </Button>\n                  {blockchain.errorMsg !== \"\" ? (\n                    <>\n                      <p>{blockchain.errorMsg}</p>\n                    </>\n                  ) : null}\n                </div>\n              ) : (\n                <>\n                  <FormText>{feedback}</FormText>\n                  <div>\n                    <Button\n                      className=\"mintButton2\"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        incrementMintAmount();\n                      }}\n                    >\n                      +\n                    </Button>\n                    <p>{mintAmount}</p>\n                    <Button\n                      className=\"mintButton2\"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        decrementMintAmount();\n                      }}\n                    >\n                      -\n                    </Button>\n                  </div>\n                  <div>\n                    <Button\n                      className=\"mintButton\"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        claimNFTs();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"INCUBATING INFANT\" : \"MINT\"}\n                    </Button>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n          <FormText className=\"mintNumber3\">\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </FormText>\n          <p className=\"mintNumber3\">\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n            <br></br>\n            <p className=\"warning\">\n              DUE TO NETWORK ISSUES PLEASE SET PRIORITY TO MEDIUM OR HIGH FOR\n              MINTING\n            </p>\n          </p>\n          <br></br>\n          <FormText className=\"mintNumber4\">\n            The Immature Infants Club©\n          </FormText>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport Oneofones from \"./components/About/Oneofones\";\nimport MintArea from \"./components/MintArea/MintArea\";\nimport Slides from \"./components/TeamSlides/Slides\";\nimport \"./App.css\"\nimport Mission from \"./components/Mission/Mission\";\n\nexport default function App() {\n  return (\n    <div className=\"appContainer\">\n      <MintArea />\n      {/* <Mission/>\n      <Oneofones /> */}\n      {/* <Slides /> */}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}